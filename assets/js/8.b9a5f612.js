(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{243:function(t,e,a){t.exports=a.p+"assets/img/access_yarn_from_cmui.e0191cc0.png"},244:function(t,e,a){t.exports=a.p+"assets/img/webui_cmui_resourcemanager_yarn.cc9e7945.png"},271:function(t,e,a){"use strict";a.r(e);var n=a(0),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"lab-3-quick-introduction-to-yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lab-3-quick-introduction-to-yarn"}},[t._v("#")]),t._v(" Lab 3: Quick introduction to YARN")]),t._v(" "),n("p",[n("strong",[t._v("Objective:")])]),t._v(" "),n("p",[t._v("To Use the Cloudera Manager UI and the ResourceManager UI to view and manage YARN status and configuration properties; Use CLI commands and the YARN API to manager YARN service; Run YARN application from CLI.")]),t._v(" "),n("p",[n("strong",[t._v("Successful Outcome:")])]),t._v(" "),n("ol",[n("li",[t._v("Explore Cloudera Manager UI and ResourceManager UI.")]),t._v(" "),n("li",[t._v("Use CLI user and administrator commands and run several simple YARN API calls.")]),t._v(" "),n("li",[t._v("Successfully run and monitor a WordCount job.")])]),t._v(" "),n("h2",{attrs:{id:"manage-yarn-through-cloudera-manager-ui-and-resourcemanager-ui"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#manage-yarn-through-cloudera-manager-ui-and-resourcemanager-ui"}},[t._v("#")]),t._v(" Manage YARN through Cloudera Manager UI and ResourceManager UI")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Access Cloudera Manager "),n("code",[t._v("http://quickstart.cloudera:7180")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(243),alt:"YA1"}})])]),t._v(" "),n("li",[n("p",[t._v("Click on the YARN service, and it should direct you to this.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(244),alt:"YA2"}})])]),t._v(" "),n("li",[n("p",[t._v("From the service page choose Web UI.")])]),t._v(" "),n("li",[n("p",[t._v("Check if there are any application running, ran or will run. (There shouldn't be any)")])])]),t._v(" "),n("h2",{attrs:{id:"manage-yarn-through-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#manage-yarn-through-cli"}},[t._v("#")]),t._v(" Manage YARN through "),n("code",[t._v("CLI")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Go to terminal.")])]),t._v(" "),n("li",[n("p",[t._v("Run the command to list all applications that are running, ran or submitted to YARN:")]),t._v(" "),n("p",[n("code",[t._v("yarn application -list")])])]),t._v(" "),n("li",[n("p",[t._v("Run the command to list how many nodes that YARN is using:")]),t._v(" "),n("p",[n("code",[t._v("yarn node -list")])])]),t._v(" "),n("li",[n("p",[t._v("Check the logs of YARN:")]),t._v(" "),n("p",[n("code",[t._v("yarn logs | more")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("Why didn't this work?")])]),t._v(" "),n("h2",{attrs:{id:"run-the-wordcount-application-on-hitchhiker’s-guide-to-the-galaxy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#run-the-wordcount-application-on-hitchhiker’s-guide-to-the-galaxy"}},[t._v("#")]),t._v(" Run the WordCount application on Hitchhiker’s Guide to the Galaxy:")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("In the terminal, locate the YARN jar for MapReduce WordCount JAR. (Under labs/wordcount/wordcount.jar)")])]),t._v(" "),n("li",[n("p",[t._v("Use YARN JAR command to run the application:")]),t._v(" "),n("p",[n("code",[t._v("yarn jar /home/cloudera/labs/wordcount/wordcount.jar org.myorg.WordCount /user/cloudera/wordcount/hitch.txt /user/cloudera/wordcount/results")])])]),t._v(" "),n("li",[n("p",[t._v("Go to ResourceManager UI and notice the application running. (http://quickstart.cloudera:8088/cluster/apps)")])]),t._v(" "),n("li",[n("p",[t._v("From the terminal read the file of the result:")]),t._v(" "),n("p",[n("code",[t._v("hdfs dfs -cat /user/cloudera/wordcount/results/part-r-00000")])])]),t._v(" "),n("li",[n("p",[t._v("Get the application ID from the ResourceManager UI and run the yarn logs command and see the output:")]),t._v(" "),n("p",[n("code",[t._v("yarn logs -applicationId application_1575833451209_0001 | more")])])]),t._v(" "),n("li",[n("p",[t._v("Check the WordCount.java application and get an idea of how map and reduce are implemented:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package org.myorg;\n\nimport java.io.IOException;\nimport java.util.regex.Pattern;\nimport org.apache.hadoop.conf.Configured;\nimport org.apache.hadoop.util.Tool;\nimport org.apache.hadoop.util.ToolRunner;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.io.IntWritable;\nimport org.apache.hadoop.io.LongWritable;\nimport org.apache.hadoop.io.Text;\n\nimport org.apache.log4j.Logger;\n\npublic class WordCount extends Configured implements Tool {\n\n  private static final Logger LOG = Logger.getLogger(WordCount.class);\n\n  public static void main(String[] args) throws Exception {\n    int res = ToolRunner.run(new WordCount(), args);\n    System.exit(res);\n  }\n\n  public int run(String[] args) throws Exception {\n    Job job = Job.getInstance(getConf(), "wordcount");\n    job.setJarByClass(this.getClass());\n    // Use TextInputFormat, the default unless job.setInputFormatClass is used\n    FileInputFormat.addInputPath(job, new Path(args[0]));\n    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n    job.setMapperClass(Map.class);\n    job.setReducerClass(Reduce.class);\n    job.setOutputKeyClass(Text.class);\n    job.setOutputValueClass(IntWritable.class);\n    return job.waitForCompletion(true) ? 0 : 1;\n  }\n\n  public static class Map extends Mapper<LongWritable, Text, Text, IntWritable> {\n    private final static IntWritable one = new IntWritable(1);\n    private Text word = new Text();\n    private long numRecords = 0;    \n    private static final Pattern WORD_BOUNDARY = Pattern.compile("\\\\s*\\\\b\\\\s*");\n\n    public void map(LongWritable offset, Text lineText, Context context)\n        throws IOException, InterruptedException {\n      String line = lineText.toString();\n      Text currentWord = new Text();\n      for (String word : WORD_BOUNDARY.split(line)) {\n        if (word.isEmpty()) {\n            continue;\n        }\n            currentWord = new Text(word);\n            context.write(currentWord,one);\n        }\n    }\n  }\n\n  public static class Reduce extends Reducer<Text, IntWritable, Text, IntWritable> {\n    @Override\n    public void reduce(Text word, Iterable<IntWritable> counts, Context context)\n        throws IOException, InterruptedException {\n      int sum = 0;\n      for (IntWritable count : counts) {\n        sum += count.get();\n      }\n      context.write(word, new IntWritable(sum));\n    }\n  }\n}\n')])])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code")])])])}),[],!1,null,null,null);e.default=o.exports}}]);